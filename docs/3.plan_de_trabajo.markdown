---
layout: page
title: Plan de trabajo
nav_order: 3
permalink: /plan de trabajo/
---

Para construir el sistema, comenzamos integrando los componentes clave: el anemómetro, la veleta y la placa central. Inicialmente, nos enfocamos en la interconexión de estos elementos con la placa y en la impresión 3D de las primeras piezas, que servirían como prototipos para posteriores ajustes y optimizaciones.

Como primer paso, analizamos el comportamiento físico y eléctrico de cada dispositivo, estudiando cómo conectar cada uno a la placa central y a los demás componentes para asegurar un funcionamiento en conjunto. Una vez establecidas las conexiones básicas, realizaremos pruebas de medición en la placa central. Comenzaremos con un diseño funcional básico, al que iremos añadiendo funcionalidades adicionales a medida que avancemos en el desarrollo de cada periférico.


En paralelo, empezamos a desarrollar la lógica del sistema en la plataforma ThingsBoard, utilizando rule chains para estructurar el flujo de datos. Esta lógica nos permite recibir en la nube los datos capturados por los periféricos del dispositivo, procesarlos y, junto con datos externos y condiciones configuradas en la plataforma, enviar señales de control al dispositivo para activar distintas funcionalidades. Este proceso ha sido detallado y progresivo, ya que probamos la comunicación entre la placa y la nube, añadiendo y mejorando funcionalidades de manera incremental hasta lograr un sistema completo y refinado.

Inicialmente, trabajamos con la placa central y una fuente de alimentación similar a las disponibles en el laboratorio. Fue aquí cuando integramos los sensores de temperatura y humedad, evaluando su rendimiento y conectándolos a la placa central para realizar pruebas que garantizaran su correcto funcionamiento. Una vez que obtuvimos resultados satisfactorios, avanzamos con la integración de los periféricos adicionales, asegurándonos de que todos los componentes operan de manera coordinada y que los datos fueran recibidos y procesados adecuadamente en la nube.

En esta etapa, comenzamos a diseñar el dashboard para visualizar tanto los datos recibidos desde nuestro dispositivo como los obtenidos a través de la API. El objetivo de esta comparación es verificar la precisión y confiabilidad de las lecturas de nuestro dispositivo. Ya logramos identificar los primeros contrastes entre ambas fuentes de datos, y los resultados han sido satisfactorios: los valores son prácticamente idénticos, aunque aún podemos realizar ajustes adicionales para mejorar la precisión del sensado.

El siguiente paso consistió en enviar señales para activar funciones específicas, como el mecanismo de protección. En esta fase, trabajamos directamente con la nube para procesar de manera adecuada los datos provenientes de los sensores y de las API externas.

Una vez que logramos que el sistema se protegiera automáticamente, consolidamos un sistema sólido y completo, con las funcionalidades principales operando de forma correcta y coordinada. A partir de este punto, nos enfocamos en optimizar y añadir nuevas funcionalidades para hacer el sistema más eficiente y completo.

## Planificación del proyecto: Diagrama de Gantt

Como es habitual en proyectos de esta naturaleza, el diagrama de Gantt es una herramienta clave para planificar y organizar el proceso de trabajo. Durante la etapa inicial, en el anteproyecto, desarrollamos un diagrama preliminar que nos sirvió como guía para estructurar las actividades a lo largo del proyecto. Ahora, al encontrarnos en la etapa final, hemos generado un nuevo diagrama que detalla las tareas realizadas, junto con sus respectivas fechas y tiempos de ejecución. Esto nos permite realizar una comparación clara entre la planificación inicial y el resultado final del proyecto.

A continuación, se presenta primero el diagrama de Gantt correspondiente al anteproyecto y, posteriormente, el diagrama final con todas las tareas efectivamente realizadas.

![ganttprevio](/img/gantt_anteproyecto.png)

![ganttfinal](/img/gantt_final.png)

La planificación inicial y el resultado final del proyecto presentan diferencias significativas que reflejan cómo evolucionó el proceso de desarrollo para ajustarse a las necesidades reales del trabajo y a los desafíos encontrados. Estas diferencias evidencian los caminos que fuimos tomando a lo largo del proyecto en comparación con la planificación inicial y destacan la capacidad del equipo para adaptarse y lograr un resultado final sólido que cumplió con la mayoría de las funcionalidades descritas en el anteproyecto.

Uno de los cambios más notables fue el nivel de detalle en la organización de las tareas. Mientras que en la planificación inicial las actividades se describieron de forma general, durante el desarrollo estas se desglosaron en puntos específicos que abordaban diferentes aspectos del proyecto. Este enfoque más detallado nos permitió centralizar las tareas, resolver problemas surgidos sobre la marcha y, posteriormente, integrar los módulos individuales para garantizar que el sistema cumpliera con las expectativas. Por ejemplo, actividades como "Construcción del dispositivo" se dividieron en varias etapas, como el diseño preliminar, la integración de módulos, la familiarización con plataformas IoT y las pruebas de funcionamiento. Esta división permitió gestionar mejor los tiempos y coordinar eficazmente el trabajo entre los miembros del equipo.

En relación con los tiempos, varias actividades tomaron más esfuerzo del previsto inicialmente, ya que durante la primera planificación no éramos plenamente conscientes de las dificultades que enfrentaríamos. La construcción del sistema, particularmente la integración de sensores y el desarrollo de lógica en la plataforma IoT, requirió más tiempo debido a la necesidad de realizar pruebas reiteradas para asegurar su funcionalidad. Por otro lado, las tareas relacionadas con la documentación final y las etapas iniciales del diseño se completaron dentro de los tiempos estimados, ya que dependían más de una buena planificación que de la ejecución técnica.

La gestión de materiales fue otro aspecto que experimentó ajustes importantes. En lugar de realizar una única compra de componentes, como habíamos planeado inicialmente, fue necesario adquirir materiales en varias etapas. Esto se debió a nuevas necesidades que surgieron durante el desarrollo, junto con retrasos en la entrega de algunos componentes o incluso errores en los envíos. Estas dificultades alargaron los tiempos de ensamblaje y pruebas, pero nos obligaron a buscar soluciones alternativas que, en algunos casos, resultaron ser más simples o eficientes tanto en código como en la implementación de las cadenas de reglas. Este aprendizaje no solo nos permitió avanzar en el proyecto, sino que también mejoró nuestra capacidad para resolver problemas con creatividad.

Otro punto importante fue la conexión entre las actividades. A lo largo del proceso, las dependencias entre tareas se hicieron más evidentes, como la necesidad de familiarizarnos con la plataforma IoT antes de desarrollar el código o configurar los dashboards. Esto nos llevó a no apresurarnos en la implementación, sino a priorizar la investigación y el aprendizaje previo. Este enfoque nos permitió aplicar los conocimientos de manera más directa y eficiente, evitando interrupciones o demoras durante las etapas más avanzadas del proyecto.

En conclusión, la planificación inicial sirvió como una base general, pero el desarrollo real del proyecto demostró cómo fue necesario ajustar esta planificación para responder a los retos técnicos y aprovechar las oportunidades de mejora. Aunque algunas tareas demandaron más tiempo del esperado, el equipo logró adaptarse y llevar el proyecto a un resultado final que superó las expectativas. Además, valoramos la oportunidad de haber aprendido aspectos clave del área de IoT, un campo que encontramos muy atractivo y con un gran potencial de aplicación tanto en lo que resta de nuestra carrera académica como en nuestro futuro profesional.

